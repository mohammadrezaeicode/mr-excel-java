plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'

}
compileJava {
    options.encoding = "UTF-8"
}
compileTestJava {options.encoding = "UTF-8"}


group = 'io.github.mohammadrezaeicode'
version = '1.0.1'

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "excel"
            group = 'io.github.mohammadrezaeicode'
            version = '1.0.1'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'MR Excel'
                description = 'A versatile Java library for effortlessly generating .xlsx files from input objects. Seamlessly create Excel spreadsheets with data, formatting, formulas, and more.'
                url = 'https://github.com/mohammadrezaeicode/mr-excel-java'
//                properties = [
//                        myProp: "value",
//                        "prop.with.dots": "anotherValue"
//                ]
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://github.com/mohammadrezaeicode/mr-excel-repo/blob/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'MohammadR'
                        name = 'Mohammad Rezaei'
                        email = 'mohammadrezaeicode@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/mohammadrezaeicode/mr-excel-java.git'
                    developerConnection = 'scm:git:git@github.com:mohammadrezaeicode/mr-excel-java.git'
                    url = 'https://github.com/mohammadrezaeicode/mr-excel-java'
                }
                repositories {
                    maven {
//                        url = version.endsWith('SNAPSHOT') ?
//                                "https://central.sonatype/content/repositories/snapshots/" :
//                                "https://central.sonatype/service/local/staging/deploy/maven2/"
//
//                        credentials {
//                            username = project.findProperty("ossrhUsername") // Load from gradle.properties
//                            password = project.findProperty("ossrhPassword") // Load from gradle.properties
//                        }
                        def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
                        def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
                        url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                    }
                }
            }
        }
    }
}

test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
//task javadocJar(type: Jar) {
//    classifier = 'javadoc'
//    from javadoc
//}
//
//task sourcesJar(type: Jar) {
//    classifier = 'sources'
//    from sourceSets.main.allSource
//}
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
    withJavadocJar()
    withSourcesJar()

}

//javadoc {
//
//}

signing {
    sign publishing.publications.mavenJava
}
//
//
//javadoc {
//    if(JavaVersion.current().isJava9Compatible()) {
//        options.addBooleanOption('html5', true)
//        exclude()
//    }
//    options {
//        addStringOption('Xdoclint:none', '') // Disable doclint warnings
//
//    }
//    exclude('**/lombok/**')
//}

javadoc {
//    options.addFileOption './src'
    options.encoding = 'UTF-8'
        if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
        exclude()
    }
//    source = sourceSets.main.allJava
//    options {
//        addStringOption('Xdoclint', 'none') // Disable doclint warnings
//        excludes = ['**/lombok/**'] // Exclude Lombok classes
//    }
}